{"version":3,"sources":["images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/Header.styles.js","components/Header/index.js","config.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/index.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/Thumb/Thumb.styles.js","components/Thumb/index.js","components/Spinner/index.js","components/Spinner/Spinner.styles.js","images/search-icon.svg","components/SearchBar/SearchBar.styles.js","components/SearchBar/index.js","components/Button/Button.styles.js","components/Button/index.js","API.js","hooks/useHomeFetch.js","images/no_image.jpg","components/Home.js","components/BreadCrumb/BreadCrumb.styles.js","components/BreadCrumb/index.js","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/index.js","helpers.js","components/MoiveInfoBar/MovieInfoBar.styles.js","components/MoiveInfoBar/index.js","components/Actor/Actor.styles.js","components/Actor/index.js","components/Movie.js","hooks/useMovieFetch.js","components/NotFound.js","GlobalStyle.js","App.js","index.js"],"names":["Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Header","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","props","image","Text","HeroImage","title","text","Grid","header","children","Image","Thumb","clickable","movieId","Spinner","SearchBar","setSearchTerm","useState","state","setState","inital","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","type","placeholder","onChange","event","currentTarget","value","button","Button","callback","onClick","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","rating","initialState","results","total_pages","total_results","Home","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","API","movies","prev","useHomeFetch","console","log","backdrop_path","original_title","overview","map","movie","poster_path","NoImage","id","BreadCrumb","movieTitle","backdrop","MovieInfo","className","vote_average","directors","length","director","name","credit_id","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","MoveInfoBar","budget","Revenue","Actor","character","imageUrl","Movie","movieID","credits","crew","filter","member","job","actors","cast","useMovieFetch","useParams","runtime","revenue","actor","profile_path","NotFound","GlobalStyle","createGlobalStyle","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eaf36f10.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/react-movie-logo.42955eb6.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    background: var(--darkGrey);\n    padding: 0 20px;\n    `;\n\nexport const Content = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    max-width: var(--maxWidth);\n    padding: 20px 0;\n    margin: 0 auto;`;\n\nexport const LogoImg = styled.img`\n    width: 200px;\n    @media screen and (max-width: 500px) {\n        width: 150px;\n    }`;\n\nexport const TMDBLogoImg = styled.img` \n    width: 100px;\n    @media screen and (max-width: 500px) {\n    width: 80px;\n    }\n    `;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport RMDBLogo from \"../../images/react-movie-logo.svg\";\nimport TMDBLogo from \"../../images/tmdb_logo.svg\";\n\nimport { Wrapper, Content, LogoImg, TMDBLogoImg } from \"./Header.styles\";\n\nconst Header = () => (\n  <Wrapper>\n    <Content>\n      <Link to=\"/\">\n        <LogoImg src={RMDBLogo} alt=\"rmdb-logo\" />\n      </Link>\n      <TMDBLogoImg src={TMDBLogo} alt=\"tmdb-logo\" />\n    </Content>\n  </Wrapper>\n);\n\nexport default Header;\n","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '433a8316bd0efb248943e3677cc274bf';\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w780';\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  background: ${(props) =>\n    `linear-gradient(\n      to bottom, rgba(0,0,0,0)\n      39%,rgba(0,0,0,0)\n      41%,rgba(0,0,0,0.65)\n      100%\n    ),\n    url('${props.image}'), var(--darkGrey)`};\n  background-size: 100%, cover;\n  background-position: center;\n  height: 600px;\n  position: relative;\n  animation: animateHeroimage 1s;\n  @keyframes animateHeroimage {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  padding: 20px;\n  max-width: var(--maxWidth);\n  margin: 0 auto;\n`;\n\nexport const Text = styled.div`\n  z-index: 100;\n  max-width: 700px;\n  position: absolute;\n  bottom: 40px;\n  margin-right: 20px;\n  min-height: 100px;\n  color: var(--white);\n  h1 {\n    font-size: var(--fontSuperBig);\n    @media screen and (max-width: 720px) {\n      font-size: var(--fontBig);\n    }\n  }\n  p {\n    font-size: var(--fontMed);\n  \n    @media screen and (max-width: 720px) {\n      font-size: var(--fontSmall);\n    }\n  }\n  @media screen and (max-width: 720px) {\n    max-width: 100%;\n  }\n`;","import React from \"react\";\n//styles\nimport { Wrapper, Content, Text } from \"./HeroImage.styles\";\nimport PropTypes from \"prop-types\";\n\nconst HeroImage = (props) => (\n  <Wrapper image={props.image}>\n    <Content>\n      <Text>\n        <h1>{props.title}</h1>\n        <p>{props.text}</p>\n      </Text>\n    </Content>\n  </Wrapper>\n);\n\nHeroImage.propTypes = {\n  image: PropTypes.string,\n  title: PropTypes.string,\n  text: PropTypes.string,\n};\n\nexport default HeroImage;\n","\nimport styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  max-width: var(--maxWidth);\n  margin: 0 auto;\n  padding: 0 20px;\n  h1 {\n    color: var(--medGrey);\n  }\n  h1 {\n    @media screen and (max-width: 768px) {\n      font-size: var(--fontBig);\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 2rem;\n`;","import React from \"react\";\n//styles\nimport { Wrapper, Content } from \"./Grid.styles\";\nimport PropTypes from \"prop-types\";\n\nconst Grid = (props) => {\n  return (\n    <Wrapper>\n      <h1>{props.header}</h1>\n      <Content>{props.children}</Content>\n    </Wrapper>\n  );\n};\n\nGrid.propTypes = {\n  header: PropTypes.string,\n};\n\nexport default Grid;\n","import styled from 'styled-components';\n\nexport const Image = styled.img`\n  width: 100%;\n  height: 100%;\n  max-width: 720px;\n  transition: all 0.3s;\n  object-fit: cover;\n  border-radius: 20px;\n  animation: animateMovieThumb 0.5s;\n  :hover {\n    opacity: 0.8;\n  }\n  @keyframes animateMovieThumb {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Image } from \"./Thumb.styles\";\nimport { Link } from \"react-router-dom\";\n\nconst Thumb = (props) => {\n  return (\n    <div>\n      {props.clickable ? (\n        <Link to={`/${props.movieId}`}>\n          <Image src={props.image} alt=\"movie-thumb\" />\n        </Link>\n      ) : (\n        <Image src={props.image} alt=\"movie-thumb\" />\n      )}\n    </div>\n  );\n};\n\nThumb.propTypes = {\n  image: PropTypes.string,\n  movieId: PropTypes.number,\n  clickable: PropTypes.bool,\n};\n\nexport default Thumb;\n","import {Spinner} from './Spinner.styles'\n\nexport default Spinner;\n","import styled from 'styled-components';\n\nexport const Spinner = styled.div`\n  border: 5px solid var(--lightGrey); \n  border-top: 5px solid var(--medGrey);\n  border-radius: 50%;\n  width: 50px;\n  height: 50px;\n  animation: spin 0.8s linear infinite;\n  margin: 20px auto;\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    \n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  height: 100px;\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  position: relative;\n  max-width: var(--maxWidth);\n  width: 100%;\n  height: 55px;\n  background: var(--medGrey);\n  margin: 0 auto;\n  border-radius: 40px;\n  color: var(--white);\n  img {\n    position: absolute;\n    left: 15px;\n    top: 14px;\n    width: 30px;\n  }\n  input {\n    font-size: 28px;\n    position: absolute;\n    left: 0px;\n    margin: 8px 0;\n    padding: 0 0 0 60px;\n    border: 0;\n    width: 95%;\n    background: transparent;\n    height: 40px;\n    color: var(--white);\n    :focus {\n      outline: none;\n    }\n    @media screen and (max-width: 720px) {\n      font-size: 28px;\n    }\n  }\n`;","import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\n// Image\nimport searchIcon from \"../../images/search-icon.svg\";\n// styles\nimport { Wrapper, Content } from \"./SearchBar.styles\";\n\nconst SearchBar = ({ setSearchTerm }) => {\n  const [state, setState] = useState(\"\");\n  const inital = useRef(true);\n\n  useEffect(() => {\n    if (inital.current) {\n      inital.current = false;\n      return;\n    }\n    const timer = setTimeout(() => {\n      setSearchTerm(state);\n    }, 500);\n\n    return () => clearTimeout(timer);\n  }, [setSearchTerm, state]);\n\n  return (\n    <Wrapper>\n      <Content>\n        <img src={searchIcon} alt=\"search-icon\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search Movie\"\n          onChange={(event) => setState(event.currentTarget.value)}\n          value={state}\n        ></input>\n      </Content>\n    </Wrapper>\n  );\n};\n\nSearchBar.propTypes = {\n  setSearchTerm: PropTypes.func,\n};\n\nexport default SearchBar;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.button`\n  display: block;\n  background: var(--darkGrey);\n  width: 25%;\n  min-width: 200px;\n  height: 60px;\n  border-radius: 30px;\n  color: var(--white);\n  border: 0;\n  font-size: var(--fontBig);\n  margin: 20px auto;\n  transition: all 0.3s;\n  outline: none;\n  cursor: pointer;\n  :hover {\n    opacity: 0.8;\n  }\n`;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n//styles\nimport { Wrapper } from \"./Button.styles\";\n\nconst Button = ({ text, callback }) => (\n  <Wrapper type=\"button\" onClick={callback}>\n    {text}\n  </Wrapper>\n);\n\nButton.propTypes = {\n  text: PropTypes.string,\n  callback: PropTypes.func,\n};\n\nexport default Button;\n","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    \n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async movieId => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async movieId => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData)\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken })\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value })\n      })\n    ).json();\n\n    return rating;\n  }\n};\n\nexport default apiSettings;\n","import { useState, useEffect, useRef } from \"react\";\n\nimport API from \"../API\";\n\nconst initialState = {\n  page: 0,\n  results: [],\n  total_pages: 0,\n  total_results: 0,\n};\n\nexport const useHomeFetch = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [state, setState] = useState(initialState);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [isLoadingMore, setIsLoadingMore] = useState(false);\n\n  const fetchMovies = async (page, searchTerm = \"\") => {\n    try {\n      setError(false);\n      setLoading(true);\n\n      const movies = await API.fetchMovies(searchTerm, page);\n\n      setState((prev) => {\n        return {\n          ...movies,\n          results:\n            page > 1\n              ? [...prev.results, ...movies.results]\n              : [...movies.results],\n        };\n      });\n      //console.log(state.results.length)\n    } catch (error) {\n      setError(true);\n    }\n    setLoading(false);\n  };\n\n  //Initial and search\n  // useEffect(() => {\n  //     fetchMovies(1);\n  // },[])\n\n  useEffect(() => {\n    setState(initialState);\n    fetchMovies(1, searchTerm);\n  }, [searchTerm]);\n\n  //Load More\n  useEffect(() => {\n    if (!isLoadingMore) return;\n    fetchMovies(state.page + 1, searchTerm);\n    setIsLoadingMore(false);\n  }, [isLoadingMore, searchTerm, state.page]);\n\n  return { state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore };\n};\n","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import React from \"react\";\n// API\n\n// config\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from \"../config.js\";\n// components\nimport HeroImage from \"./HeroImage/index.js\";\nimport Grid from \"./Grid/index.js\";\nimport Thumb from \"./Thumb/index.js\";\nimport Spinner from \"./Spinner/index.js\";\nimport SearchBar from \"./SearchBar/index.js\";\nimport Button from \"./Button/index.js\";\n// Hook\nimport { useHomeFetch } from \"../hooks/useHomeFetch\";\n\n// Image\nimport NoImage from \"../images/no_image.jpg\";\n\nconst Home = () => {\n  const { state, loading, error, setSearchTerm, searchTerm, setIsLoadingMore } =\n    useHomeFetch();\n  console.log(state);\n  if (error) return <div>Something Went Wrong...</div>;\n\n  return (\n    <>\n      {\" \"}\n      {!searchTerm && state.results[0] && (\n        <HeroImage\n          image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path}`}\n          title={state.results[0].original_title}\n          text={state.results[0].overview}\n        />\n      )}\n      <SearchBar setSearchTerm={setSearchTerm} />\n      <Grid header={searchTerm ? \"Search Result\" : \"Popular Movies\"}>\n        {state.results.map((movie) => (\n          <Thumb\n            key={movie.id}\n            clickable\n            image={\n              movie.poster_path\n                ? IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\n                : NoImage\n            }\n            movieId={movie.id}\n          />\n        ))}\n      </Grid>\n      {loading && <Spinner />}\n      {state.page < state.total_pages && !loading && (\n        <Button text=\"Load More\" callback={() => setIsLoadingMore(true)} />\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 70px;\n  background: var(--medGrey);\n  color: var(--white);\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  width: 100%;\n  max-width: var(--maxWidth);\n  padding: 0 20px;\n  span {\n    font-size: 1.2rem;\n    color: var(--white);\n    padding-right: 10px;\n    @media screen and (max-width: 768px) {\n      font-size: 16px;\n    }\n  }\n`;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n//styles\nimport { Wrapper, Content } from \"./BreadCrumb.styles\";\n\nconst BreadCrumb = ({ movieTitle }) => (\n  <Wrapper>\n    <Content>\n      <Link to=\"/\">\n        <span>Home</span>\n      </Link>\n      <span>|</span>\n      <span>{movieTitle}</span>\n    </Content>\n  </Wrapper>\n);\n\nBreadCrumb.propTypes = {\n  movieTitle: PropTypes.string,\n};\n\nexport default BreadCrumb;\n","import styled from \"styled-components\";\nimport { IMAGE_BASE_URL, BACKDROP_SIZE } from \"../../config\";\n\nexport const Wrapper = styled.div`\n  background: ${(props) =>\n    props.backdrop\n      ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.backdrop}')`\n      : \"#000\"};\n  background-size: cover;\n  background-position: center;\n  padding: 40px 20px;\n  animation: animateMovieinfo 1s;\n  @keyframes animateMovieinfo {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  max-width: 1280px;\n  margin: 0 auto;\n  background: rgb(0, 0, 0, 0.7);\n  border-radius: 20px;\n  @media screen and (max-width: 768px) {\n    display: block;\n    max-height: none;\n  }\n`;\n\nexport const Text = styled.div`\n  width: 100%;\n  padding: 20px 40px;\n  color: var(--white);\n  overflow: hidden;\n  .rating-director {\n    display: flex;\n    justify-content: flex-start;\n  }\n  .score {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 35px;\n    height: 35px;\n    background: #fff;\n    color: #000;\n    font-weight: 800;\n    border-radius: 25px;\n    margin: 0px 0 0 0;\n  }\n  .director {\n    margin: 0 0 0 40px;\n    p {\n      margin: 0;\n    }\n  }\n  h1 {\n    @media screen and (max-width: 768px) {\n      font-size: var(--fontBig);\n    }\n  }\n`;\n","import React from \"react\";\n//Componenets\nimport Thumb from \"../Thumb\";\n//Config\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../../config\";\n//Image\nimport NoImage from \"../../images/no_image.jpg\";\n//Styles\nimport { Wrapper, Content, Text } from \"./MovieInfo.styles\";\nimport PropTypes from \"prop-types\";\n\nconst MovieInfo = ({ movie }) => (\n  <Wrapper backdrop={movie.backdrop_path}>\n    <Content>\n      <Thumb\n        image={\n          movie.poster_path\n            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n            : NoImage\n        }\n        clickable={false}\n      />\n      <Text>\n        <h1>{movie.title}</h1>\n        <h3>Plot</h3>\n        <p>{movie.overview}</p>\n\n        <div className=\"rating-director\">\n          <div>\n            <h3>Rating</h3>\n            <div className=\"score\">{movie.vote_average}</div>\n          </div>\n          <div className=\"director\">\n            <h3>Director{movie.directors.length > 1 ? \"s\" : \"\"}</h3>\n            {movie.directors.map((director) => (\n              <p key={director.credit_id}>{director.name}</p>\n            ))}\n          </div>\n        </div>\n      </Text>\n    </Content>\n  </Wrapper>\n);\n\nMovieInfo.propTypes = {\n  movie: PropTypes.object,\n};\n\nexport default MovieInfo;\n","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = (money) => {\n  const formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\nexport const isPresistedState = (stateName) => {\n  const sessionState = sessionStorage.getItem(stateName);\n  return sessionState && JSON.parse(sessionState);\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  min-height: 100px;\n  background: var(--darkGrey);\n  padding: 0 20px;\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  max-width: var(--maxWidth);\n  width: 100%;\n  margin: 0 auto;\n  .column {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: var(--medGrey);\n    border-radius: 20px;\n    margin: 0 20px;\n    flex: 1;\n    :first-child {\n      margin-left: 0;\n    }\n    :last-child {\n      margin-right: 0;\n    }\n  }\n  @media screen and (max-width: 768px) {\n    display: block;\n    .column {\n      margin: 20px 0;\n    }\n  }\n`;\n","import React from \"react\";\n\nimport { calcTime, convertMoney } from \"../../helpers\";\nimport MovieInfo from \"../MovieInfo\";\nimport PropTypes from \"prop-types\";\n\nimport { Wrapper, Content } from \"./MovieInfoBar.styles\";\n\nconst MoveInfoBar = ({ time, budget, Revenue }) => (\n  <Wrapper>\n    <Content>\n      <div className=\"column\">\n        <p>Running time: {calcTime(time)}</p>\n      </div>\n      <div className=\"column\">\n        <p>Budget: {convertMoney(budget)}</p>\n      </div>\n      <div className=\"column\">\n        <p>Revenue {convertMoney(Revenue)}</p>\n      </div>\n    </Content>\n  </Wrapper>\n);\n\nMoveInfoBar.propTypes = {\n  time: PropTypes.number,\n  budget: PropTypes.number,\n  revenue: PropTypes.number,\n};\n\nexport default MoveInfoBar;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  color: var(--white);\n  background: var(--darkGrey);\n  border-radius: 20px;\n  padding: 5px;\n  text-align: center;\n  h3 {\n    margin: 10px 0 0 0;\n  }\n  p {\n    margin: 5px 0;\n  }\n`;\n\nexport const Image = styled.img`\n  display: block;\n  width: 100%;\n  height: 200px;\n  object-fit: cover;\n  border-radius: 15px;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Wrapper, Image } from \"./Actor.styles\";\n\nconst Actor = ({ name, character, imageUrl }) => (\n  <Wrapper>\n    <Image src={imageUrl} alt=\"actor-thumb\" />\n    <h3>{name}</h3>\n    <p>{character}</p>\n  </Wrapper>\n);\n\nActor.propTypes = {\n  name: PropTypes.string,\n  character: PropTypes.string,\n  imageUrl: PropTypes.string,\n};\n\nexport default Actor;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n//Config\nimport { IMAGE_BASE_URL, POSTER_SIZE } from \"../config\";\n// Componenets\nimport Grid from \"./Grid\";\nimport Spinner from \"./Spinner\";\nimport BreadCrumb from \"./BreadCrumb\";\nimport MovieInfo from \"./MovieInfo\";\nimport MoveInfoBar from \"./MoiveInfoBar\";\nimport Actor from \"./Actor\";\n//Hook\nimport { useMovieFetch } from \"../hooks/useMovieFetch\";\n//IMage\nimport NoImage from \"../images/no_image.jpg\";\nconst Movie = () => {\n  const { movieId } = useParams();\n\n  const { state: movie, loading, error } = useMovieFetch(movieId);\n\n  if (loading) return <Spinner />;\n  if (error) return <div>Something went wrong</div>;\n  return (\n    <>\n      <BreadCrumb movieTitle={movie.original_title} />\n      <MovieInfo movie={movie} />\n      <MoveInfoBar\n        time={movie.runtime}\n        budget={movie.budget}\n        revenue={movie.revenue}\n      />\n      <Grid header=\"Actors\">\n        {movie.actors.map((actor) => (\n          <Actor\n            key={actor.credit_id}\n            name={actor.name}\n            character={actor.character}\n            imageUrl={\n              actor.profile_path\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\n                : NoImage\n            }\n          />\n        ))}\n      </Grid>\n    </>\n  );\n};\n\nexport default Movie;\n","import { useState, useEffect } from \"react\";\nimport API from \"../API\";\n\nexport const useMovieFetch = (movieID) => {\n  const [state, setState] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        setLoading(true);\n        setError(false);\n\n        const movie = await API.fetchMovie(movieID);\n        const credits = await API.fetchCredits(movieID);\n        //Get directors only\n        const directors = credits.crew.filter(\n          (member) => member.job === \"Director\"\n        );\n\n        setState({\n          ...movie,\n          actors: credits.cast,\n          directors,\n        });\n        setLoading(false);\n      } catch (error) {\n        setError(true);\n      }\n    };\n    fetchMovie();\n  }, [movieID]);\n\n  return { state, loading, error };\n};\n","import React from \"react\";\n\nconst NotFound = () => <div>Not Found</div>;\n\nexport default NotFound;\n","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n:root {\n    --maxWidth: 1280px; \n    --white: #fff;\n    --lightGrey: #eee;\n    --medGrey: #353535; \n    --darkGrey: #1c1c1c;\n    --fontSuperBig: 2.5rem;\n    --fontBig: 1.5rem;\n    --fontMed: 1.2rem;\n    --fontSmall: 1rem;\n  }\n  * {\n    box-sizing: border-box;\n    font-family: 'Abel', sans-serif;  \n  }\n  body {  \n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n        h1 {\n      font-size: 2rem;\n      font-weight: 600;\n      color: var(--white);\n    }\n    h3 {\n      font-size: 1.1rem;\n      font-weight: 600;\n    }\n    p {\n      font-size: 1rem;\n      color: var(--white);\n    }\n  }\n`;","import React from \"react\";\n// Routing\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\n//components\nimport Header from \"./components/Header/index.js\";\nimport Home from \"./components/Home.js\";\nimport Movie from \"./components/Movie.js\";\nimport NotFound from \"./components/NotFound.js\";\n\n//styles\nimport { GlobalStyle } from \"./GlobalStyle\";\n\nconst App = () => (\n  <Router>\n    <Header />\n    <Routes>\n      <Route path=\"/\" element={<Home />}></Route>\n      <Route path=\"/:movieId\" element={<Movie />} />\n      <Route path=\"/*\" element={<NotFound />} />\n    </Routes>\n    <GlobalStyle />\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}